{"version":3,"sources":["components/Nav.js","axios.js","request.js","components/Banner.js","components/Row.js","components/Home.js","firebase.js","features/userSlice.js","components/Plan.js","components/Profile.js","components/SignIn.js","components/LogIn.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["Nav","useState","show","handleShow","history","useHistory","transtionNavBar","window","scrollY","useEffect","addEventListener","removeEventListener","className","onClick","push","src","alt","instance","axios","create","baseURL","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Bannner","string","n","movie","setMovie","a","get","request","data","results","Math","floor","random","length","fetchData","console","log","style","backgroundSize","backgroundPosition","backgroundImage","backdrop_path","title","original_name","overview","substr","Row","fetchUrl","isLargeRow","movies","setMovies","trailerUrl","setTrailerUrl","map","poster_path","movieTrailer","name","then","url","urlParams","URLSearchParams","URL","search","catch","error","handleClick","id","videoId","opts","height","width","playerVars","autoplay","Home","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","auth","userSlice","createSlice","initialState","user","reducers","login","state","action","payload","logout","actions","selectUser","Plans","products","setProducts","useSelector","subscription","setSubscription","collection","doc","uid","querySnapshot","forEach","role","current_period_end","seconds","current_period_start","where","productDoc","ref","docs","price","prices","priceId","priceData","loadCheckout","add","success_url","location","origin","cancel_url","onSnapshot","snap","sessionId","alert","message","loadStripe","redirectToCheckout","Date","toLocaleDateString","Object","entries","productId","productData","isCurrentPackage","toLowerCase","includes","description","ProfileScreen","email","signOut","SignInScreen","emailRef","useRef","passwordRef","type","placeholder","e","preventDefault","signInWithEmailAndPassword","current","value","authUser","createUserWithEmailAndPassword","Login","signIn","setSignIn","App","dispatch","useDispatch","onAuthStateChanged","userAuth","path","exact","configureStore","reducer","userReducer","Boolean","hostname","match","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7fd08180.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./Nav.css\";\r\n\r\nconst Nav = () => {\r\n  const [show, handleShow] = useState(false);\r\n  const history = useHistory();\r\n\r\n  const transtionNavBar = () => {\r\n    if (window.scrollY > 100) {\r\n      handleShow(true);\r\n    } else {\r\n      handleShow(false);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", transtionNavBar);\r\n    return () => window.removeEventListener(\"scroll\", transtionNavBar);\r\n  }, []);\r\n\r\n  return (\r\n    <div className={`nav ${show && \"nav_black\"} `}>\r\n      <div className=\"nav__content\">\r\n        <img\r\n          onClick={() => history.push(\"/\")}\r\n          className=\"nav_logo\"\r\n          src=\"/images/netflix-logo-png-2584.png\"\r\n          alt=\"netflixlogo\"\r\n        />\r\n\r\n        <img\r\n          onClick={() => history.push(\"/profile\")}\r\n          className=\"nav_avatar\"\r\n          src=\"https://upload.wikimedia.org/wikipedia/commons/0/0b/Netflix-avatar.png\"\r\n          alt=\"avatar\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3\",\r\n});\r\n\r\nexport default instance;\r\n","const API_KEY = \"b0f0be0ceaf6a89df4910f59392902de\";\r\n\r\nconst requests = {\r\n  fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n  fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\r\n  fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n  fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n  fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n  fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n  fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n  fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n};\r\n\r\nexport default requests;\r\n\r\n//https://api.themoviedb.org/3/trending/all/week?api_key=b0f0be0ceaf6a89df4910f59392902de&language=en-US\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"../axios\";\r\nimport requests from \"../request\";\r\nimport \"./Banner.css\";\r\n\r\nfunction Bannner() {\r\n  const [movie, setMovie] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await axios.get(requests.fetchNetflixOriginals);\r\n      setMovie(\r\n        request.data.results[\r\n          Math.floor(Math.random() * request.data.results.length - 1)\r\n        ]\r\n      );\r\n      return request;\r\n    }\r\n    fetchData();\r\n  }, []); /* runs <Row> when it first loads n when movie changes only */\r\n\r\n  console.log(movie);\r\n\r\n  function truncate(string, n) {\r\n    return string?.length > n ? string.substr(0, n - 1) + \"...\" : string;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"header\"\r\n        style={{\r\n          backgroundSize: \"cover\",\r\n          backgroundPosition: \"center fixed\",\r\n          backgroundImage: `url(\"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\")`,\r\n        }}\r\n      >\r\n        <div className=\"banner__content\">\r\n          <h1 className=\"title\">{movie?.title || movie?.original_name}</h1>\r\n          <div className=\"banner__buttons\">\r\n            <button>Play</button>\r\n            <button>My List</button>\r\n          </div>\r\n\r\n          <h1 className=\"banner__description\">\r\n            {truncate(movie?.overview, 200)}\r\n          </h1>\r\n        </div>\r\n        <div className=\"banner__fadebtn\" />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Bannner;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"../axios\";\r\nimport \"./Row.css\";\r\nimport YouTube from \"react-youtube\";\r\nimport movieTrailer from \"movie-trailer\";\r\n\r\nfunction Row({ title, fetchUrl, isLargeRow = false }) {\r\n  const [movies, setMovies] = useState([]);\r\n  const [trailerUrl, setTrailerUrl] = useState(\"\");\r\n\r\n  const opts = {\r\n    height: \"390\",\r\n    width: \"100%\",\r\n    playerVars: {\r\n      // https://developers.google.com/youtube/player_parameters\r\n      autoplay: 1,\r\n    },\r\n  };\r\n\r\n  const base_url = \"https://image.tmdb.org/t/p/original/\";\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await axios.get(fetchUrl);\r\n      setMovies(request.data.results);\r\n      return request;\r\n    }\r\n    fetchData();\r\n  }, [fetchUrl]);\r\n\r\n  console.log(movies);\r\n\r\n  const handleClick = (movie) => {\r\n    if (trailerUrl) {\r\n      setTrailerUrl(\"\");\r\n    } else {\r\n      movieTrailer(movie?.name || \"\")\r\n        .then((url) => {\r\n          const urlParams = new URLSearchParams(new URL(url).search);\r\n          setTrailerUrl(urlParams.get(\"v\"));\r\n        })\r\n        .catch((error) => console.log(error));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <h1>{title}</h1>\r\n      <div className=\"row__posters\">\r\n        {movies.map(\r\n          (movie) =>\r\n            ((isLargeRow && movie.poster_path) ||\r\n              (!isLargeRow && movie.backdrop_path)) && (\r\n              <img\r\n                onClick={() => handleClick(movie)}\r\n                className={`row__poster ${isLargeRow && \"row__posterLarge\"}`}\r\n                key={movie.id}\r\n                src={`${base_url}${\r\n                  isLargeRow ? movie.poster_path : movie.backdrop_path\r\n                }`}\r\n                alt={movie.name}\r\n              />\r\n            )\r\n        )}\r\n      </div>\r\n      {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Row;\r\n","import React from \"react\";\r\nimport \"./Home.css\";\r\nimport Nav from \"./Nav\";\r\nimport Banner from \"./Banner\";\r\nimport Row from \"./Row\";\r\nimport requests from \"../request\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div>\r\n      <Nav />\r\n      <Banner />\r\n\r\n      <Row\r\n        title=\"Netflix Originals\"\r\n        fetchUrl={requests.fetchNetflixOriginals}\r\n        isLargeRow\r\n      />\r\n      <Row title=\"Trending Now\" fetchUrl={requests.fetchTrending} />\r\n      <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated} />\r\n      <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies} />\r\n      <Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies} />\r\n      <Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies} />\r\n      <Row title=\"Romance Movies\" fetchUrl={requests.fetchRomanceMovies} />\r\n      <Row title=\"Documentaries\" fetchUrl={requests.fetchDocumentaries} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import firebase from \"firebase/compat/app\";\r\nimport \"firebase/compat/auth\";\r\nimport \"firebase/compat/firestore\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDArGpXvb8B8b8cLlR5x8xtGVGEs1jpEOk\",\r\n  authDomain: \"netflix-d2f59.firebaseapp.com\",\r\n  projectId: \"netflix-d2f59\",\r\n  storageBucket: \"netflix-d2f59.appspot.com\",\r\n  messagingSenderId: \"903466175280\",\r\n  appId: \"1:903466175280:web:c3f6b8b077339bf80216f5\",\r\n};\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\nconst db = firebaseApp.firestore(); /* firestore is database */\r\nconst auth = firebase.auth();\r\n\r\nexport { auth };\r\nexport default db;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const userSlice = createSlice({\n  name: \"user\",\n  initialState: {\n    user: null,\n  },\n  reducers: {\n    login: (state, action) => {\n      state.user = action.payload;\n    },\n    logout: (state) => {\n      state.user = null;\n    }\n  },\n});\n\nexport const { login, logout } = userSlice.actions;\nexport const selectUser = (state) => state.user.user;\n\nexport default userSlice.reducer;\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport { selectUser } from \"../features/userSlice\";\r\nimport \"./Plan.css\";\r\nimport db from \"../firebase\";\r\n\r\nconst Plans = () => {\r\n  const [products, setProducts] = useState([]);\r\n  const user = useSelector(selectUser);\r\n  const [subscription, setSubscription] = useState(null);\r\n\r\n  useEffect(() => {\r\n    db.collection(\"customers\")\r\n      .doc(user.uid)\r\n      .collection(\"subscriptions\")\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        querySnapshot.forEach(async (subscription) => {\r\n          setSubscription({\r\n            role: subscription.data().role,\r\n            current_period_end: subscription.data().current_period_end.seconds,\r\n            current_period_start:\r\n              subscription.data().current_period_start.seconds,\r\n          });\r\n        });\r\n      });\r\n  }, [user.uid]);\r\n\r\n  useEffect(() => {\r\n    db.collection(\"products\")\r\n      .where(\"active\", \"==\", true)\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        const products = {};\r\n        querySnapshot.forEach(async (productDoc) => {\r\n          products[productDoc.id] = productDoc.data();\r\n          const priceSnap = await productDoc.ref.collection(\"prices\").get();\r\n          priceSnap.docs.forEach((price) => {\r\n            products[productDoc.id].prices = {\r\n              priceId: price.id,\r\n              priceData: price.data(),\r\n            };\r\n          });\r\n        });\r\n        setProducts(products);\r\n      });\r\n  }, []);\r\n\r\n  console.log(products);\r\n  console.log(subscription);\r\n\r\n  const loadCheckout = async (priceId) => {\r\n    const docRef = await db\r\n      .collection(\"customers\")\r\n      .doc(user.uid)\r\n      .collection(\"checkout_sessions\")\r\n      .add({\r\n        price: priceId,\r\n        success_url: window.location.origin,\r\n        cancel_url: window.location.origin,\r\n      });\r\n\r\n    docRef.onSnapshot(async (snap) => {\r\n      const { error, sessionId } = snap.data();\r\n\r\n      if (error) {\r\n        alert(`yoooooooooooooooo:${error.message}`);\r\n      }\r\n\r\n      if (sessionId) {\r\n        const stripe = await loadStripe(\r\n          \"pk_test_51JWJJcSHawbpqr8Qi5S1GHaBGnJokXnS6BckbSr9o2DqIADIHTHrKGLgXeHWquZQox79KP6ChhekPIkg7fVVC605002P6pyZlx\"\r\n        );\r\n        stripe.redirectToCheckout({ sessionId });\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"Plans\">\r\n      {subscription && (\r\n\r\n          <pre>\r\n          Renewal Date:\r\n          {new Date(subscription?.current_period_end * 1000).toLocaleDateString(\r\n            \"ko-KR\"\r\n          )}\r\n          </pre>\r\n\r\n      )}\r\n    \r\n      {Object.entries(products).map(([productId, productData]) => {\r\n        const isCurrentPackage = productData.name\r\n          ?.toLowerCase()\r\n          .includes(subscription?.role);\r\n        return (\r\n          <div\r\n            key={productId}\r\n            className={`${\r\n              isCurrentPackage && \"plans__Details--disabled\"\r\n            } plans__Details`}\r\n          >\r\n            <div className=\"plan__Info\">\r\n              <h5>{productData.name}</h5>\r\n              <h6>{productData.description}</h6>\r\n            </div>\r\n            <button\r\n              className=\"subscribe__Btn\"\r\n              onClick={() =>\r\n                !isCurrentPackage && loadCheckout(productData.prices.priceId)\r\n              }\r\n            >\r\n              {isCurrentPackage ? \"Current Package\" : \"Subscribe\"}\r\n            </button>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Plans;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { auth } from \"../firebase\";\r\nimport Nav from \"./Nav\";\r\nimport \"./Profile.css\";\r\nimport { selectUser } from \"../features/userSlice\";\r\nimport Plans from \"./Plan\";\r\n\r\nconst ProfileScreen = () => {\r\n  const user = useSelector(selectUser);\r\n\r\n  return (\r\n    <div className=\"profile__Screen\">\r\n      <Nav />\r\n      <div className=\"profile__ScreenBody\">\r\n        <h1>Edit Profile</h1>\r\n        <div className=\"profile__ScreenLogo\">\r\n          <img\r\n            src=\"https://upload.wikimedia.org/wikipedia/commons/0/0b/Netflix-avatar.png\"\r\n            alt=\"\"\r\n          />\r\n          <div className=\"profile__ScreenDetails\">\r\n            <h2>{user.email}</h2>\r\n            <div className=\"profile__ScreenPlan\">\r\n              <h3>Plans</h3>\r\n              <Plans />\r\n\r\n              <button onClick={() => auth.signOut()}>Sign Out</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileScreen;\r\n","import React, { useRef } from \"react\";\r\nimport { auth } from \"../firebase\";\r\nimport \"./SignIn.css\";\r\n\r\nconst SignInScreen = () => {\r\n  const emailRef = useRef(null);\r\n  const passwordRef = useRef(null);\r\n\r\n  const register = (e) => {\r\n    e.preventDefault();\r\n\r\n    auth\r\n      .createUserWithEmailAndPassword(\r\n        emailRef.current.value,\r\n        passwordRef.current.value\r\n      )\r\n      .then((authUser) => {\r\n        console.log(authUser);\r\n      })\r\n      .catch((error) => {\r\n        alert(error.message);\r\n      });\r\n  };\r\n\r\n  const signIn = (e) => {\r\n    e.preventDefault();\r\n\r\n    auth\r\n      .signInWithEmailAndPassword(\r\n        emailRef.current.value,\r\n        passwordRef.current.value\r\n      )\r\n      .then((authUser) => {\r\n        console.log(authUser);\r\n      })\r\n      .catch((error) => {\r\n        alert(error.message);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"sign_up__Screen\">\r\n      <form action=\"\">\r\n        <h1>Sign In</h1>\r\n        <input ref={emailRef} type=\"email\" placeholder=\"Emial Address\" />\r\n        <input ref={passwordRef} type=\"password\" placeholder=\"Password\" />\r\n        <button type=\"submit\" className=\"sign_Up_Btn\" onClick={signIn}>\r\n          Sign In\r\n        </button>\r\n        <h4>\r\n          <span className=\"sign_Up_Bottom\"> New to netflix?</span>\r\n          <span className=\"sign_Up_BottomLink\" onClick={register}>\r\n            Sign Up now\r\n          </span>\r\n        </h4>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignInScreen;\r\n","import React, { useState } from \"react\";\r\nimport \"./LogIn.css\";\r\nimport SignInScreen from \"./SignIn\";\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nconst Login = () => {\r\n  const [signIn, setSignIn] = useState(false);\r\n  const history=useHistory()\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"login__Screen\">\r\n      <div className=\"login__Background\">\r\n        <img onClick={() => history.push(\"/\")}\r\n          className=\"login__Logo\"\r\n          src=\"https://download.logo.wine/logo/Netflix/Netflix-Logo.wine.png\"\r\n          alt=\"\"\r\n        />\r\n\r\n        <button onClick={() => setSignIn(true)} className=\"login__Button\">\r\n          Sign In\r\n        </button>\r\n\r\n        <div className=\"login_Gradient\" />\r\n      </div>\r\n\r\n      <div className=\"login__Body\">\r\n        {signIn ? (\r\n          <SignInScreen />\r\n        ) : (\r\n          <>\r\n            <h1>\r\n              Ultimate movies, TV <br /> shows and more.\r\n            </h1>\r\n            <h2>watch anywhere. Cancel anytime.</h2>\r\n            <h3>\r\n              Ready to watch? Enter your emial to create or restart your\r\n              membership.\r\n            </h3>\r\n\r\n            <div className=\"login__input\">\r\n              <form action=\"\">\r\n                <input type=\"email\" placeholder=\"Email address\" />\r\n                <button\r\n                  onClick={() => setSignIn(true)}\r\n                  className=\"get__Started\"\r\n                >\r\n                  Get Started\r\n                </button>\r\n              </form>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useEffect } from \"react\";\nimport \"react-router-dom\";\nimport \"./App.css\";\nimport Home from \"./components/Home\";\nimport Profile from \"./components/Profile\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Login from \"./components/LogIn\";\nimport { auth } from \"./firebase\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { login, logout, selectUser } from \"./features/userSlice\";\n\nconst App = () => {\n  const user = useSelector(selectUser);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((userAuth) => {\n      if (userAuth) {\n        console.log(userAuth);\n        dispatch(\n          login({\n            uid: userAuth.uid,\n            email: userAuth.email,\n          })\n        );\n      } else {\n        dispatch(logout());\n      }\n    });\n    return unsubscribe;\n  }, [dispatch]);\n\n  return (\n    <div className=\"app\">\n      <Router>\n        {!user ? (\n          <Login />\n        ) : (\n          <Switch>\n            <Route path=\"/profile\">\n              <Profile />\n            </Route>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n          </Switch>\n        )}\n      </Router>\n    </div>\n  );\n};\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport userReducer from \"../features/userSlice\";\n\nexport default configureStore({\n  reducer: {\n    user: userReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./app/store\";\nimport { Provider } from \"react-redux\";\nimport * as serviceWorker from \"./serviceWorker\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n     <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}